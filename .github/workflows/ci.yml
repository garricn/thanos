name: CI
"on":
  push:
    branches:
      - main
    paths:
      - "**.js"
      - "**.jsx"
      - "**.ts"
      - "**.tsx"
      - "package*.json"
      - ".github/workflows/**"
      - "configs/**"
  pull_request:
    branches:
      - main
    paths:
      - "**.js"
      - "**.jsx"
      - "**.ts"
      - "**.tsx"
      - "package*.json"
      - ".github/workflows/**"
      - "configs/**"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CI: true
  HUSKY: 0

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-node
    outputs:
      cache-hit: ${{ steps.node-modules-cache.outputs.cache-hit }}

  security:
    name: Security Check
    needs: [setup]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-node
      - name: Check for Snyk token
        id: check-snyk
        run: |
          if [ -n "${{ secrets.SNYK_TOKEN }}" ]; then
            {
              echo "has_snyk_token=true"
            } >> "$GITHUB_OUTPUT"
          else
            {
              echo "has_snyk_token=false"
              echo "::warning::SNYK_TOKEN secret is not set. Security checks will be limited."
            } >> "$GITHUB_OUTPUT"
          fi
      - name: Run Snyk security audit
        if: steps.check-snyk.outputs.has_snyk_token == 'true'
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: npm run security:check
      - name: Run npm audit as fallback
        if: steps.check-snyk.outputs.has_snyk_token != 'true'
        run: |
          echo "Running npm audit as fallback security check..."
          npm audit || true
      - name: Upload security report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-report
          path: |
            ./**/*.log
            ./npm-debug.log*
            ./snyk-report.json
          retention-days: 7

  lint:
    name: Lint
    needs: [setup]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-node
      - name: Install system dependencies
        run: |
          echo "Installing system dependencies..."
          sudo apt-get update
          # Install yamllint
          if ! command -v yamllint &> /dev/null; then
            echo "Installing yamllint..."
            sudo apt-get install -y yamllint
          fi
          # Install shellcheck
          if ! command -v shellcheck &> /dev/null; then
            echo "Installing shellcheck..."
            sudo apt-get install -y shellcheck
          fi
      - name: Run linters
        run: npm run lint
      - name: Upload logs on failure
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: lint-logs
          path: |
            ./**/*.log
            ./npm-debug.log*
          retention-days: 7

  type-check:
    name: Type Check
    needs: [setup]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-node
      - name: Check types
        run: npm run type-check
      - name: Upload logs on failure
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: type-check-logs
          path: |
            ./**/*.log
            ./npm-debug.log*
          retention-days: 7

  test:
    name: Unit Tests
    needs: [setup, type-check]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-node
      - name: Run unit tests with coverage
        run: npm run test:unit:coverage
      - name: Upload test coverage
        uses: actions/upload-artifact@v4
        with:
          name: api-unit-coverage
          path: coverage/api/unit/
          retention-days: 7
      - name: Upload web unit coverage
        uses: actions/upload-artifact@v4
        with:
          name: web-unit-coverage
          path: coverage/web/unit/
          retention-days: 7
      - name: Upload logs on failure
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-logs
          path: |
            ./**/*.log
            ./npm-debug.log*
            ./junit.xml
          retention-days: 7

  snapshot:
    name: Snapshot Tests
    needs: [setup, type-check]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-node
      - name: Run snapshot tests with coverage
        run: npm run test:snapshot:coverage
      - name: Upload snapshot coverage
        uses: actions/upload-artifact@v4
        with:
          name: web-snapshot-coverage
          path: coverage/web/snapshot/
          retention-days: 7
      - name: Upload logs on failure
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: snapshot-test-logs
          path: |
            ./**/*.log
            ./npm-debug.log*
            ./junit.xml
          retention-days: 7

  e2e:
    name: E2E Tests
    needs: [setup, type-check]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-node
      - name: Install system dependencies for Cypress
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth
      - name: Build API and Web
        run: npm run build
      - name: Run E2E tests
        run: npm run test:e2e
      - name: Upload logs on failure
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: e2e-logs
          path: |
            ./**/*.log
            ./npm-debug.log*
            ./cypress/screenshots/**/*
            ./cypress/videos/**/*
          retention-days: 7

  coverage:
    name: Code Coverage
    needs: [setup, test, snapshot]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: ./.github/actions/setup-node
      - name: Download API unit test coverage
        uses: actions/download-artifact@v4
        with:
          name: api-unit-coverage
          path: coverage/api/unit
      - name: Download web unit test coverage
        uses: actions/download-artifact@v4
        with:
          name: web-unit-coverage
          path: coverage/web/unit
      - name: Download web snapshot test coverage
        uses: actions/download-artifact@v4
        with:
          name: web-snapshot-coverage
          path: coverage/web/snapshot
      - name: Combine coverage for SonarCloud
        run: |
          npm run coverage:combine
          npm run coverage:combine:xml
      - name: Upload individual coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: |
            coverage/api/unit/lcov.info
            coverage/web/unit/lcov.info
            coverage/web/snapshot/lcov.info
          flags: |
            api-unit
            web-unit
            web-snapshot
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
          verbose: true
      - name: Upload combined coverage report to Codecov
        uses: codecov/codecov-action@v4
        with:
          directory: ./coverage/combined/
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
          verbose: true
      - name: Upload combined coverage
        uses: actions/upload-artifact@v4
        with:
          name: combined-coverage
          path: coverage/combined/
          retention-days: 7
      - name: Upload logs on failure
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: coverage-logs
          path: |
            ./**/*.log
            ./npm-debug.log*
            ./coverage/**/*
          retention-days: 7

  sonarcloud:
    name: SonarCloud Analysis
    needs: [setup, coverage]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: ./.github/actions/setup-node
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
      - name: Install SonarScanner
        run: |
          curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
          unzip -o sonar-scanner.zip
          sudo mv sonar-scanner-5.0.1.3006-linux /opt/sonar-scanner
          sudo ln -sf /opt/sonar-scanner/bin/sonar-scanner /usr/local/bin/sonar-scanner
      - name: Download combined coverage
        uses: actions/download-artifact@v4
        with:
          name: combined-coverage
          path: coverage/combined
      - name: Run SonarCloud Analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          # Determine branch name
          BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)
          echo "Running analysis on branch: $BRANCH_NAME"

          # Run SonarScanner with debug logging
          sonar-scanner -X \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.projectKey=garricn_thanos \
            -Dsonar.organization=garricn \
            -Dsonar.branch.name=$BRANCH_NAME \
            -Dsonar.scm.provider=git \
            -Dsonar.config=configs/quality/sonar-project.properties
      - name: Upload logs on failure
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: sonar-logs
          path: |
            ./**/*.log
            ./npm-debug.log*
            ./.scannerwork/**/*
          retention-days: 7

  upload-logs:
    name: Upload Logs
    if: always()
    needs:
      - setup
      - security
      - lint
      - type-check
      - test
      - snapshot
      - e2e
      - coverage
      - sonarcloud
    runs-on: ubuntu-latest
    steps:
      - name: Upload all logs
        uses: actions/upload-artifact@v4
        with:
          name: all-logs
          path: |
            ./**/*.log
            ./npm-debug.log*
            ./junit.xml
            ./coverage/**/*
            ./cypress/screenshots/**/*
            ./cypress/videos/**/*
          retention-days: 7
