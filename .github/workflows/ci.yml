name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Lint code
        run: npm run lint:all
      - name: Lint markdown
        run: npm run lint:md
      - name: Upload logs on failure
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: lint-logs
          path: |
            ./**/*.log
            ./npm-debug.log*
          retention-days: 7

  type-check:
    name: Type Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Check package sync
        run: |
          echo "Checking if package.json and package-lock.json are in sync..."
          if ! npm ci --dry-run > /dev/null 2>&1; then
            echo "::error::package.json and package-lock.json are out of sync. Please run 'npm install' locally and commit the changes."
            exit 1
          fi
      - name: Install dependencies
        run: npm ci
      - name: Check types
        run: npm run type-check
      - name: Upload logs on failure
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: type-check-logs
          path: |
            ./**/*.log
            ./npm-debug.log*
          retention-days: 7

  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Check package sync
        run: |
          echo "Checking if package.json and package-lock.json are in sync..."
          if ! npm ci --dry-run > /dev/null 2>&1; then
            echo "::error::package.json and package-lock.json are out of sync. Please run 'npm install' locally and commit the changes."
            exit 1
          fi
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm run test:unit
      - name: Upload logs on failure
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: unit-test-logs
          path: |
            ./**/*.log
            ./npm-debug.log*
            ./junit.xml
          retention-days: 7

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for accurate coverage reporting
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Check package sync
        run: |
          echo "Checking if package.json and package-lock.json are in sync..."
          if ! npm ci --dry-run > /dev/null 2>&1; then
            echo "::error::package.json and package-lock.json are out of sync. Please run 'npm install' locally and commit the changes."
            exit 1
          fi
      - name: Install dependencies
        run: npm ci
      - name: Generate coverage
        run: npm run coverage
      - name: List coverage files
        run: find coverage -type f | grep lcov.info || echo "No lcov.info files found"
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          directory: ./coverage/
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
          verbose: true # Add verbose flag for more detailed output
      - name: Upload logs on failure
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: coverage-logs
          path: |
            ./**/*.log
            ./npm-debug.log*
            ./coverage/**/*
          retention-days: 7

  e2e:
    name: E2E Tests
    runs-on: ubuntu-latest
    # Make this job not block the workflow if it fails
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Check package sync
        run: |
          echo "Checking if package.json and package-lock.json are in sync..."
          if ! npm ci --dry-run > /dev/null 2>&1; then
            echo "::error::package.json and package-lock.json are out of sync. Please run 'npm install' locally and commit the changes."
            exit 1
          fi
      - name: Install dependencies
        run: npm ci
      - name: Start API server in background
        run: |
          npm run start:api &
          sleep 10 # Give the API server time to start
      - name: Run E2E tests
        run: npm run test:all
        # Allow this step to fail without failing the job
        continue-on-error: true
      - name: Upload logs on failure
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: e2e-logs
          path: |
            ./**/*.log
            ./npm-debug.log*
            ./cypress/screenshots/**/*
            ./cypress/videos/**/*
          retention-days: 7

  # This job depends on all required checks passing
  validate:
    name: Validate
    needs: [lint, type-check, test, coverage]
    runs-on: ubuntu-latest
    steps:
      - name: All checks passed
        run: echo "All validation checks have passed!"

  # Optional security check that won't block the workflow
  security:
    name: Security Check
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Check package sync
        run: |
          echo "Checking if package.json and package-lock.json are in sync..."
          if ! npm ci --dry-run > /dev/null 2>&1; then
            echo "::error::package.json and package-lock.json are out of sync. Please run 'npm install' locally and commit the changes."
            exit 1
          fi
      - name: Install dependencies
        run: npm ci
      - name: Run security audit
        run: npm audit --audit-level=high
      - name: Upload logs on failure
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: security-logs
          path: |
            ./**/*.log
            ./npm-debug.log*
            ./npm-audit.json
          retention-days: 7

  # Upload logs as artifacts when any job fails
  upload-logs:
    name: Upload Logs
    runs-on: ubuntu-latest
    if: ${{ always() && (contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')) }}
    needs: [lint, type-check, test, coverage, e2e, security]
    steps:
      - name: Create logs directory
        run: mkdir -p logs

      - name: Collect GitHub Actions logs
        run: |
          echo "Collecting GitHub Actions logs for run ${{ github.run_id }}"
          echo "Run URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" > logs/run_info.txt
          echo "Workflow: ${{ github.workflow }}" >> logs/run_info.txt
          echo "Event: ${{ github.event_name }}" >> logs/run_info.txt
          echo "Ref: ${{ github.ref }}" >> logs/run_info.txt
          echo "SHA: ${{ github.sha }}" >> logs/run_info.txt

          # Collect job status information
          echo "Job Status Summary:" >> logs/job_status.txt
          echo "Lint: ${{ needs.lint.result }}" >> logs/job_status.txt
          echo "Type Check: ${{ needs.type-check.result }}" >> logs/job_status.txt
          echo "Unit Tests: ${{ needs.test.result }}" >> logs/job_status.txt
          echo "Code Coverage: ${{ needs.coverage.result }}" >> logs/job_status.txt
          echo "E2E Tests: ${{ needs.e2e.result }}" >> logs/job_status.txt
          echo "Security Check: ${{ needs.security.result }}" >> logs/job_status.txt

      - name: Upload logs as artifacts
        uses: actions/upload-artifact@v3
        with:
          name: workflow-logs-${{ github.run_id }}
          path: logs/
          retention-days: 7

      - name: Create comment with logs link
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const artifactUrl = `${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts`;
            const runUrl = `${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## CI Workflow Failed ‚ùå\n\nSome jobs in the CI workflow failed. You can view the detailed logs here:\n\n- [Workflow Run](${ runUrl })\n- [Workflow Artifacts](${ artifactUrl })\n\n### Job Status\n\n- Lint: ${{ needs.lint.result }}\n- Type Check: ${{ needs.type-check.result }}\n- Unit Tests: ${{ needs.test.result }}\n- Code Coverage: ${{ needs.coverage.result }}\n- E2E Tests: ${{ needs.e2e.result }}\n- Security Check: ${{ needs.security.result }}`
            });
