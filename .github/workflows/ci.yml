name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Lint code
        run: npm run lint:all
      - name: Lint markdown
        run: npm run lint:md

  type-check:
    name: Type Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Check package sync
        run: |
          echo "Checking if package.json and package-lock.json are in sync..."
          if ! npm ci --dry-run > /dev/null 2>&1; then
            echo "::error::package.json and package-lock.json are out of sync. Please run 'npm install' locally and commit the changes."
            exit 1
          fi
      - name: Install dependencies
        run: npm ci
      - name: Check types
        run: npm run type-check

  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Check package sync
        run: |
          echo "Checking if package.json and package-lock.json are in sync..."
          if ! npm ci --dry-run > /dev/null 2>&1; then
            echo "::error::package.json and package-lock.json are out of sync. Please run 'npm install' locally and commit the changes."
            exit 1
          fi
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm run test:unit

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for accurate coverage reporting
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Check package sync
        run: |
          echo "Checking if package.json and package-lock.json are in sync..."
          if ! npm ci --dry-run > /dev/null 2>&1; then
            echo "::error::package.json and package-lock.json are out of sync. Please run 'npm install' locally and commit the changes."
            exit 1
          fi
      - name: Install dependencies
        run: npm ci
      - name: Generate coverage
        run: npm run coverage
      - name: List coverage files
        run: find coverage -type f | grep lcov.info || echo "No lcov.info files found"
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          directory: ./coverage/
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
          verbose: true # Add verbose flag for more detailed output

  e2e:
    name: E2E Tests
    runs-on: ubuntu-latest
    # Make this job not block the workflow if it fails
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Check package sync
        run: |
          echo "Checking if package.json and package-lock.json are in sync..."
          if ! npm ci --dry-run > /dev/null 2>&1; then
            echo "::error::package.json and package-lock.json are out of sync. Please run 'npm install' locally and commit the changes."
            exit 1
          fi
      - name: Install dependencies
        run: npm ci
      - name: Start API server in background
        run: |
          npm run start:api &
          sleep 10 # Give the API server time to start
      - name: Run E2E tests
        run: npm run test:all
        # Allow this step to fail without failing the job
        continue-on-error: true

  # This job depends on all required checks passing
  validate:
    name: Validate
    needs: [lint, type-check, test, coverage]
    runs-on: ubuntu-latest
    steps:
      - name: All checks passed
        run: echo "All validation checks have passed!"

  # Optional security check that won't block the workflow
  security:
    name: Security Check
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Check package sync
        run: |
          echo "Checking if package.json and package-lock.json are in sync..."
          if ! npm ci --dry-run > /dev/null 2>&1; then
            echo "::error::package.json and package-lock.json are out of sync. Please run 'npm install' locally and commit the changes."
            exit 1
          fi
      - name: Install dependencies
        run: npm ci
      - name: Check if SNYK_TOKEN is set
        run: |
          if [ -z "$SNYK_TOKEN" ]; then
            echo "::warning::SNYK_TOKEN is not set. Please add it to your repository secrets to enable security scanning."
            exit 0
          fi
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      - name: Run Snyk
        run: npx snyk test --severity-threshold=high
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
