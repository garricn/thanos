name: CI
'on':
  push:
    branches:
      - main
    paths:
      - '**.js'
      - '**.jsx'
      - '**.ts'
      - '**.tsx'
      - 'package*.json'
      - '.github/workflows/**'
      - 'configs/**'
  pull_request:
    branches:
      - main
    paths:
      - '**.js'
      - '**.jsx'
      - '**.ts'
      - '**.tsx'
      - 'package*.json'
      - '.github/workflows/**'
      - 'configs/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CI: true
  HUSKY: 0

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-node
    outputs:
      cache-hit: ${{ steps.node-modules-cache.outputs.cache-hit }}

  security:
    name: Security Check
    needs: [setup]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-node
      - name: Check for Snyk token
        id: check-snyk
        run: |
          if [ -n "${{ secrets.SNYK_TOKEN }}" ]; then
            {
              echo "has_snyk_token=true"
            } >> "$GITHUB_OUTPUT"
          else
            {
              echo "has_snyk_token=false"
              echo "::warning::SNYK_TOKEN secret is not set. Security checks will be limited."
            } >> "$GITHUB_OUTPUT"
          fi
      - name: Run Snyk security audit
        if: steps.check-snyk.outputs.has_snyk_token == 'true'
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: npm run security:check
      - name: Run npm audit as fallback
        if: steps.check-snyk.outputs.has_snyk_token != 'true'
        run: |
          echo "Running npm audit as fallback security check..."
          npm audit || true
      - name: Upload security report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-report
          path: |
            ./**/*.log
            ./npm-debug.log*
            ./snyk-report.json
          retention-days: 7

  lint:
    name: Lint
    needs: [setup]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-node
      - name: Install system dependencies
        run: |
          echo "Installing system dependencies..."
          sudo apt-get update
          # Install yamllint
          if ! command -v yamllint &> /dev/null; then
            echo "Installing yamllint..."
            sudo apt-get install -y yamllint
          fi
          # Install shellcheck
          if ! command -v shellcheck &> /dev/null; then
            echo "Installing shellcheck..."
            sudo apt-get install -y shellcheck
          fi
      - name: Run linters
        run: npm run lint
      - name: Upload logs on failure
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: lint-logs
          path: |
            ./**/*.log
            ./npm-debug.log*
          retention-days: 7

  type-check:
    name: Type Check
    needs: [setup]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-node
      - name: Check types
        run: npm run type-check
      - name: Upload logs on failure
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: type-check-logs
          path: |
            ./**/*.log
            ./npm-debug.log*
          retention-days: 7

  test:
    name: Unit Tests
    needs: [setup]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-node
      - name: Run tests with coverage
        run: npm run coverage:combined
      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-coverage-results
          path: |
            coverage/**/*
            test-report.xml
      - name: Upload logs on failure
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-logs
          path: |
            ./**/*.log
            ./npm-debug.log*
          retention-days: 7

  e2e:
    name: E2E Tests
    needs: [setup]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-node
      - name: Install Playwright system dependencies
        run: npx playwright install --with-deps
      - name: Build API and Web
        run: npm run build
      - name: Run E2E tests
        run: npm run test:e2e
      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-results
          path: |
            apps/web/playwright-report/**/*
            apps/web/test-results/**/*
      - name: Upload logs on failure
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: e2e-logs
          path: |
            apps/web/playwright-report/**/*
            apps/web/test-results/**/*
            apps/web/npm-debug.log*
            apps/web/yarn-debug.log*
            apps/web/yarn-error.log*
          retention-days: 7

  coverage:
    name: Code Coverage
    needs: [setup, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: ./.github/actions/setup-node
      - name: Download test coverage
        uses: actions/download-artifact@v4
        with:
          name: test-coverage-results
          path: coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          directory: ./coverage/
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
          verbose: true
      - name: Upload logs on failure
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: coverage-logs
          path: |
            ./**/*.log
            ./npm-debug.log*
            ./coverage/**/*
          retention-days: 7

  sonarcloud:
    name: SonarCloud Analysis
    needs: [setup, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: ./.github/actions/setup-node
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Install SonarScanner
        run: |
          SONAR_SCANNER_VERSION="5.0.1.3006"
          SONAR_SCANNER_URL="https://binaries.sonarsource.com/Distribution/sonar-scanner-cli"
          curl -sSLo sonar-scanner.zip \
            "$SONAR_SCANNER_URL/sonar-scanner-cli-$SONAR_SCANNER_VERSION-linux.zip"
          unzip -o sonar-scanner.zip
          sudo mv sonar-scanner-$SONAR_SCANNER_VERSION-linux /opt/sonar-scanner
          sudo ln -sf /opt/sonar-scanner/bin/sonar-scanner /usr/local/bin/sonar-scanner
      - name: Download test results
        uses: actions/download-artifact@v4
        with:
          name: test-coverage-results
          path: .
      - name: Run SonarCloud Analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
          SONAR_VERBOSE: true
        run: npm run sonar
      - name: Upload logs on failure
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: sonar-logs
          path: |
            ./**/*.log
            ./npm-debug.log*
            ./.scannerwork/**/*
          retention-days: 7
