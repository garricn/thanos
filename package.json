{
  "name": "thanos",
  "version": "0.0.0",
  "private": true,
  "license": "MIT",
  "type": "module",
  "engines": {
    "node": "20"
  },
  "workspaces": [
    "apps/*"
  ],
  "scripts": {
    "act": "./scripts/act.sh",
    "build": "npm run build --workspace=apps/api && npm run build --workspace=apps/web",
    "check": "npm-run-all --parallel lint type-check test:unit",
    "check:all": "npm-run-all check test:e2e coverage:all security:check check:deps",
    "check:deps": "npm ci --dry-run && npm ls --depth=0",
    "check:outdated": "npm outdated || true",
    "clean": "rm -rf dist apps/*/dist tmp node_modules/.cache",
    "clean:deep": "./scripts/clean-deep.sh",
    "coverage": "rm -rf coverage && npm run test:coverage --workspace=apps/api && npm run test:coverage --workspace=apps/web && node scripts/combine-coverage.js",
    "coverage:all": "rm -rf coverage && npm run test:coverage --workspace=apps/api -- --coverageReporters=\"text-summary\" --coverageReporters=\"html\" --coverageReporters=\"lcov\" && npm run test:coverage --workspace=apps/web -- --coverageReporters=\"text-summary\" --coverageReporters=\"html\" --coverageReporters=\"lcov\" && node scripts/combine-coverage.js",
    "coverage:all:open": "npm run coverage:all && echo '\nCoverage reports generated at:' && echo 'Web: file://${PWD}/coverage/apps/web/lcov-report/index.html' && echo 'API: file://${PWD}/coverage/apps/api/lcov-report/index.html' && open coverage/apps/web/lcov-report/index.html coverage/apps/api/lcov-report/index.html",
    "coverage:clean": "rm -rf coverage && rm -f apps/*/test-report.xml",
    "coverage:combine": "mkdir -p coverage/combined && cat coverage/api/unit/lcov.info coverage/web/unit/lcov.info coverage/web/snapshot/lcov.info > coverage/combined/lcov.info",
    "coverage:combine:xml": "node scripts/combine-sonar-reports.js",
    "coverage:report": "npm run test:unit:coverage && npm run test:snapshot:coverage && npm run coverage:combine && echo '\nCoverage reports generated at:' && echo \"API Unit: file://$PWD/coverage/api/unit/lcov-report/index.html\" && echo \"Web Unit: file://$PWD/coverage/web/unit/lcov-report/index.html\" && echo \"Web Snapshot: file://$PWD/coverage/web/snapshot/lcov-report/index.html\" && echo \"Combined: file://$PWD/coverage/combined/lcov-report/index.html\"",
    "fix-node-version": "echo 'To switch to Node.js '$(cat .nvmrc)', please run: source ./scripts/switch-node.sh'",
    "format": "prettier --config configs/lint/.prettierrc --ignore-path configs/lint/.prettierignore --write \"**/*.{js,jsx,mjs,ts,tsx}\" && npm run format:md && npm run format:sh && npm run format:yaml",
    "format:md": "prettier --config configs/lint/.prettierrc --ignore-path configs/lint/.prettierignore --write \"**/*.md\"",
    "format:sh": "shfmt -i 2 -ci -w scripts/*.sh",
    "format:yaml": "prettier --config configs/lint/.prettierrc --ignore-path configs/lint/.prettierignore --write \"**/*.{yml,yaml}\"",
    "lint": "npm run lint --workspace=apps/web && npm run lint --workspace=apps/api && npm run lint:md && npm run lint:sh && npm run lint:yaml",
    "lint:md": "markdownlint-cli2 --config configs/lint/.markdownlint-cli2.jsonc \"**/*.md\"",
    "lint:md:fix": "markdownlint-cli2 --config configs/lint/.markdownlint-cli2.jsonc --fix \"**/*.md\"",
    "lint:sh": "shellcheck scripts/*.sh",
    "lint:yaml": "find . -type f \\( -name '*.yml' -o -name '*.yaml' \\) ! -path '*/node_modules/*' -exec yamllint -c configs/lint/.yamllint {} +",
    "node:version": "./scripts/node-version.sh",    
    "prepare": "[ -n \"$CI\" ] || [ -n \"$HUSKY\" -a \"$HUSKY\" = \"0\" ] || husky",
    "security:check": "snyk test",
    "security:fix": "snyk wizard",
    "start": "concurrently --kill-others-on-fail \"npm run start:api\" \"npm run start:web\"",
    "start:api": "npm run dev --workspace=apps/api",
    "start:web": "npm run dev --workspace=apps/web",
    "test": "npm run test --workspace=apps/api && npm run test --workspace=apps/web",
    "test:all": "npm run test && npm run test:e2e",
    "test:e2e": "./scripts/test-e2e.sh",
    "test:snapshot": "npm run test --workspace=apps/web -- --testPathPattern=snapshot",
    "test:snapshot:coverage": "mkdir -p coverage/web/snapshot && npm run test --workspace=apps/web -- --testPathPattern=snapshot --coverage --coverageDirectory=\"${PWD}/coverage/web/snapshot\" --coverageReporters=text-summary --coverageReporters=html --coverageReporters=lcov --testResultsProcessor=jest-sonar-reporter && node scripts/jest-sonar-fix.js web-snapshot",
    "test:unit": "npm run test --workspace=apps/api && npm run test --workspace=apps/web",
    "test:unit:coverage": "npm run coverage:clean && mkdir -p coverage/api/unit coverage/web/unit && npm run test --workspace=apps/api -- --coverage --coverageDirectory=\"${PWD}/coverage/api/unit\" --coverageReporters=text-summary --coverageReporters=html --coverageReporters=lcov --testResultsProcessor=jest-sonar-reporter && node scripts/jest-sonar-fix.js api && npm run test --workspace=apps/web -- --coverage --coverageDirectory=\"${PWD}/coverage/web/unit\" --coverageReporters=text-summary --coverageReporters=html --coverageReporters=lcov --testResultsProcessor=jest-sonar-reporter && node scripts/jest-sonar-fix.js web-unit",
    "type-check": "npm run typecheck --workspace=apps/web && npm run typecheck --workspace=apps/api",
    "type-check:watch": "npm run typecheck --workspace=apps/web -- --watch",
    "update:deps": "npm audit fix && npm install && git add package.json package-lock.json && git commit -m 'Claude: Update dependencies and sync package-lock.json'",
    "update:deps:force": "npm audit fix --force && npm install && git add package.json package-lock.json && git commit -m 'Claude: Update dependencies with breaking changes and sync package-lock.json'"
  },
  "resolutions": {
    "inflight": "1.0.6"
  },
  "dependencies": {
    "@radix-ui/react-slot": "^1.1.2",
    "axios": "^1.6.0",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "cypress": "^13.6.6",
    "esbuild": "^0.19.12",
    "eslint": "^9.0.0",
    "express": "^4.19.2",
    "fs-extra": "^11.3.0",
    "js-yaml": "^4.1.0",
    "lucide-react": "^0.479.0",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "shadcn-ui": "^0.9.5",
    "sqlite3": "^5.1.7",
    "tailwind-merge": "^3.0.2",
    "vite": "5.4.12"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3.3.0",
    "@eslint/js": "^9.0.0",
    "@testing-library/dom": "10.4.0",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "16.1.0",
    "@types/express": "^4.17.21",
    "@types/fs-extra": "^11.0.4",
    "@types/jest": "^29.5.12",
    "@types/node": "18.16.9",
    "@types/react": "19.0.0",
    "@types/react-dom": "19.0.0",
    "@types/supertest": "^6.0.2",
    "@typescript-eslint/eslint-plugin": "^8.26.1",
    "@typescript-eslint/parser": "^8.26.1",
    "@vitejs/plugin-react": "^4.2.0",
    "@vitest/ui": "^3.0.0",
    "autoprefixer": "^10.4.20",
    "babel-jest": "^29.7.0",
    "concurrently": "^9.1.2",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-cypress": "^3.5.0",
    "eslint-plugin-import": "2.31.0",
    "eslint-plugin-jsx-a11y": "^6.10.1",
    "eslint-plugin-react": "^7.35.0",
    "eslint-plugin-react-hooks": "^5.0.0",
    "glob": "^10.4.5",
    "husky": "^9.1.7",
    "inquirer": "^8.2.5",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^29.7.0",
    "jest-environment-node": "^29.7.0",
    "jest-sonar-reporter": "^2.0.0",
    "jiti": "2.4.2",
    "jsdom": "~22.1.0",
    "lint-staged": "^15.2.2",
    "markdownlint-cli2": "^0.17.2",
    "nodemon": "^3.1.9",
    "npm-force-resolutions": "^0.0.10",
    "npm-run-all": "^4.1.5",
    "postcss": "^8.5.3",
    "prettier": "^3.5.3",
    "snyk": "^1.1260.0",
    "sonarqube-scanner": "^3.5.0",
    "supertest": "^7.0.0",
    "tailwindcss": "^4.0.12",
    "ts-jest": "^29.1.0",
    "ts-node": "10.9.1",
    "ts-node-dev": "^2.0.0",
    "tslib": "^2.3.0",
    "typescript": "~5.7.2",
    "typescript-eslint": "^8.19.0",
    "wait-on": "^8.0.3",
    "@xmldom/xmldom": "^0.8.10"
  }
}
