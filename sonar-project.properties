# Project identification
sonar.projectKey=garricn_thanos
sonar.projectName=Thanos
sonar.projectVersion=1.0.0
sonar.organization=garricn
sonar.host.url=https://sonarcloud.io

# Project base directory
sonar.projectBaseDir=.

# Source code location
sonar.sources=apps/api/src,apps/web/src
sonar.exclusions=**/node_modules/**,**/dist/**,**/coverage/**,**/*.json,**/*.md,**/*.html,**/*.d.ts,**/*.config.{js,jsx,ts,tsx,mjs},**/*.stories.{js,jsx,ts,tsx},**/*.styles.{js,jsx,ts,tsx},**/*.constants.{js,jsx,ts,tsx},**/*.types.{js,jsx,ts,tsx},**/*.mock.{js,jsx,ts,tsx},**/*.generated.{js,jsx,ts,tsx},**/*.module.css,**/assets/**,**/migrations/**,**/seeds/**,**/e2e/**

# Tests location
sonar.tests=apps/api/tests,apps/web/src
sonar.test.inclusions=apps/api/tests/**/*.test.ts,apps/web/src/**/*.spec.tsx

# Test coverage reports
sonar.javascript.lcov.reportPaths=coverage/combined/lcov.info
sonar.testExecutionReportPaths=test-report.xml

# Encoding of the source code
sonar.sourceEncoding=UTF-8

# TypeScript analysis configuration
sonar.typescript.tsconfigPaths=tsconfig.json,apps/api/tsconfig.json,apps/web/tsconfig.json

# Additional parameters
sonar.verbose=false
sonar.qualitygate.wait=true
sonar.qualitygate.timeout=300

# Duplication detection settings
sonar.cpd.exclusions=**/*.{test,spec}.{ts,tsx}

# Pull request decoration
sonar.pullrequest.provider=github
sonar.pullrequest.github.summary.enabled=true
sonar.pullrequest.github.repository=${env.GITHUB_REPOSITORY}

# Branch analysis
sonar.branch.autoconfig=true

# SCM configuration
sonar.scm.provider=git
